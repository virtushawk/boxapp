name: boxapp

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  logspout:
    image: gliderlabs/logspout:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      syslog://logs5.papertrailapp.com:39580
  redis:
    image: 'bitnami/redis:latest'
    environment:
        - ALLOW_EMPTY_PASSWORD=yes
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak_authorization_server
    ports:
      - "8083:8080"
      - "9000:9000"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres-db
      - DB_DATABASE=keycloak
      - DB_USER=postgres
      - DB_PASSWORD=2745839
      - KC_HEALTH_ENABLED=true
    command:
     - start-dev
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
  gateway:
    image: gateway:latest
    container_name: gateway
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8080/actuator/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - APP_SERVICE_DISCOVERY_URL=service-discovery
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:management
    container_name: message_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  postgres-db:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 2745839
      POSTGRES_USER: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 5
  conf-srv:
    image: confsvr:latest
    container_name: config_server
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8888/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
  service-discovery:
    image: eurekasrv:latest
    container_name: service_discovery
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8761/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
  event:
    image: event:latest
    container_name: event_service
    ports:
      - "8082:8082"
    environment:
      - APP_CONFIG_URL=conf-srv
      - APP_SERVICE_DISCOVERY_URL=service-discovery
      - APP_DB_URL=postgres-db
      - APP_MESSAGE_BROKER_URL=rabbitmq
      - APP_REDIS_URL=redis
      - APP_ZIPKIN_URL=zipkin
    depends_on:
      postgres-db:
        condition: service_healthy
      conf-srv:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      gateway:
        condition: service_healthy
      redis:
        condition: service_healthy
  user:
    image: user:latest
    container_name: user_service
    ports:
      - "8081:8081"
    environment:
      - APP_CONFIG_URL=conf-srv
      - APP_SERVICE_DISCOVERY_URL=service-discovery
      - APP_DB_URL=postgres-db
      - APP_MESSAGE_BROKER_URL=rabbitmq
      - APP_REDIS_URL=redis
      - APP_ZIPKIN_URL=zipkin
    depends_on:
      postgres-db:
        condition: service_healthy
      conf-srv:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      gateway:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    external: true
    name: 26d27edee59c83b993ad772884e1f90689d9d3dde8b68a98c2b912f90aeda7f3
  rabbitmq_data:
    driver: local
  keycloak_data:
    driver: local
